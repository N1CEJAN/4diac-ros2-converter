// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file Ros2PrimitiveDatentypen.cpp
 * This source file contains the definition of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */

#ifdef _WIN32
// Remove linker warning LNK4221 on Visual Studio
namespace {
char dummy;
}  // namespace
#endif  // _WIN32

#include "Ros2PrimitiveDatentypen.h"
#include <fastcdr/Cdr.h>

#include <fastcdr/exceptions/BadParamException.h>
using namespace eprosima::fastcdr::exception;

#include <utility>

#define conversion_tests_msg_Ros2PrimitiveDatentypen_max_cdr_typesize 1364ULL;
#define conversion_tests_msg_Ros2PrimitiveDatentypen_max_key_cdr_typesize 0ULL;

conversion_tests::msg::Ros2PrimitiveDatentypen::Ros2PrimitiveDatentypen()
{
    // boolean m_a_bool
    m_a_bool = false;
    // octet m_a_byte
    m_a_byte = 0;
    // uint8 m_a_uint8
    m_a_uint8 = 0;
    // unsigned short m_a_uint16
    m_a_uint16 = 0;
    // unsigned long m_a_uint32
    m_a_uint32 = 0;
    // unsigned long long m_a_uint64
    m_a_uint64 = 0;
    // int8 m_a_int8
    m_a_int8 = 0;
    // short m_a_int16
    m_a_int16 = 0;
    // long m_a_int32
    m_a_int32 = 0;
    // long long m_a_int64
    m_a_int64 = 0;
    // float m_a_float32
    m_a_float32 = 0.0;
    // double m_a_float64
    m_a_float64 = 0.0;
    // uint8 m_a_char
    m_a_char = 0;
    // string m_a_string
    m_a_string ="";
    // string m_a_bound_string
    m_a_bound_string ="";
    // wstring m_a_wstring

    // wstring m_a_bound_wstring


}

conversion_tests::msg::Ros2PrimitiveDatentypen::~Ros2PrimitiveDatentypen()
{

















}

conversion_tests::msg::Ros2PrimitiveDatentypen::Ros2PrimitiveDatentypen(
        const Ros2PrimitiveDatentypen& x)
{
    m_a_bool = x.m_a_bool;
    m_a_byte = x.m_a_byte;
    m_a_uint8 = x.m_a_uint8;
    m_a_uint16 = x.m_a_uint16;
    m_a_uint32 = x.m_a_uint32;
    m_a_uint64 = x.m_a_uint64;
    m_a_int8 = x.m_a_int8;
    m_a_int16 = x.m_a_int16;
    m_a_int32 = x.m_a_int32;
    m_a_int64 = x.m_a_int64;
    m_a_float32 = x.m_a_float32;
    m_a_float64 = x.m_a_float64;
    m_a_char = x.m_a_char;
    m_a_string = x.m_a_string;
    m_a_bound_string = x.m_a_bound_string;
    m_a_wstring = x.m_a_wstring;
    m_a_bound_wstring = x.m_a_bound_wstring;
}

conversion_tests::msg::Ros2PrimitiveDatentypen::Ros2PrimitiveDatentypen(
        Ros2PrimitiveDatentypen&& x) noexcept 
{
    m_a_bool = x.m_a_bool;
    m_a_byte = x.m_a_byte;
    m_a_uint8 = x.m_a_uint8;
    m_a_uint16 = x.m_a_uint16;
    m_a_uint32 = x.m_a_uint32;
    m_a_uint64 = x.m_a_uint64;
    m_a_int8 = x.m_a_int8;
    m_a_int16 = x.m_a_int16;
    m_a_int32 = x.m_a_int32;
    m_a_int64 = x.m_a_int64;
    m_a_float32 = x.m_a_float32;
    m_a_float64 = x.m_a_float64;
    m_a_char = x.m_a_char;
    m_a_string = std::move(x.m_a_string);
    m_a_bound_string = std::move(x.m_a_bound_string);
    m_a_wstring = std::move(x.m_a_wstring);
    m_a_bound_wstring = std::move(x.m_a_bound_wstring);
}

conversion_tests::msg::Ros2PrimitiveDatentypen& conversion_tests::msg::Ros2PrimitiveDatentypen::operator =(
        const Ros2PrimitiveDatentypen& x)
{

    m_a_bool = x.m_a_bool;
    m_a_byte = x.m_a_byte;
    m_a_uint8 = x.m_a_uint8;
    m_a_uint16 = x.m_a_uint16;
    m_a_uint32 = x.m_a_uint32;
    m_a_uint64 = x.m_a_uint64;
    m_a_int8 = x.m_a_int8;
    m_a_int16 = x.m_a_int16;
    m_a_int32 = x.m_a_int32;
    m_a_int64 = x.m_a_int64;
    m_a_float32 = x.m_a_float32;
    m_a_float64 = x.m_a_float64;
    m_a_char = x.m_a_char;
    m_a_string = x.m_a_string;
    m_a_bound_string = x.m_a_bound_string;
    m_a_wstring = x.m_a_wstring;
    m_a_bound_wstring = x.m_a_bound_wstring;

    return *this;
}

conversion_tests::msg::Ros2PrimitiveDatentypen& conversion_tests::msg::Ros2PrimitiveDatentypen::operator =(
        Ros2PrimitiveDatentypen&& x) noexcept
{

    m_a_bool = x.m_a_bool;
    m_a_byte = x.m_a_byte;
    m_a_uint8 = x.m_a_uint8;
    m_a_uint16 = x.m_a_uint16;
    m_a_uint32 = x.m_a_uint32;
    m_a_uint64 = x.m_a_uint64;
    m_a_int8 = x.m_a_int8;
    m_a_int16 = x.m_a_int16;
    m_a_int32 = x.m_a_int32;
    m_a_int64 = x.m_a_int64;
    m_a_float32 = x.m_a_float32;
    m_a_float64 = x.m_a_float64;
    m_a_char = x.m_a_char;
    m_a_string = std::move(x.m_a_string);
    m_a_bound_string = std::move(x.m_a_bound_string);
    m_a_wstring = std::move(x.m_a_wstring);
    m_a_bound_wstring = std::move(x.m_a_bound_wstring);

    return *this;
}

bool conversion_tests::msg::Ros2PrimitiveDatentypen::operator ==(
        const Ros2PrimitiveDatentypen& x) const
{

    return (m_a_bool == x.m_a_bool && m_a_byte == x.m_a_byte && m_a_uint8 == x.m_a_uint8 && m_a_uint16 == x.m_a_uint16 && m_a_uint32 == x.m_a_uint32 && m_a_uint64 == x.m_a_uint64 && m_a_int8 == x.m_a_int8 && m_a_int16 == x.m_a_int16 && m_a_int32 == x.m_a_int32 && m_a_int64 == x.m_a_int64 && m_a_float32 == x.m_a_float32 && m_a_float64 == x.m_a_float64 && m_a_char == x.m_a_char && m_a_string == x.m_a_string && m_a_bound_string == x.m_a_bound_string && m_a_wstring == x.m_a_wstring && m_a_bound_wstring == x.m_a_bound_wstring);
}

bool conversion_tests::msg::Ros2PrimitiveDatentypen::operator !=(
        const Ros2PrimitiveDatentypen& x) const
{
    return !(*this == x);
}

size_t conversion_tests::msg::Ros2PrimitiveDatentypen::getMaxCdrSerializedSize(
        size_t current_alignment)
{
    static_cast<void>(current_alignment);
    return conversion_tests_msg_Ros2PrimitiveDatentypen_max_cdr_typesize;
}

size_t conversion_tests::msg::Ros2PrimitiveDatentypen::getCdrSerializedSize(
        const conversion_tests::msg::Ros2PrimitiveDatentypen& data,
        size_t current_alignment)
{
    (void)data;
    size_t initial_alignment = current_alignment;


    current_alignment += 1 + eprosima::fastcdr::Cdr::alignment(current_alignment, 1);


    current_alignment += 1 + eprosima::fastcdr::Cdr::alignment(current_alignment, 1);


    current_alignment += 1 + eprosima::fastcdr::Cdr::alignment(current_alignment, 1);


    current_alignment += 2 + eprosima::fastcdr::Cdr::alignment(current_alignment, 2);


    current_alignment += 4 + eprosima::fastcdr::Cdr::alignment(current_alignment, 4);


    current_alignment += 8 + eprosima::fastcdr::Cdr::alignment(current_alignment, 8);


    current_alignment += 1 + eprosima::fastcdr::Cdr::alignment(current_alignment, 1);


    current_alignment += 2 + eprosima::fastcdr::Cdr::alignment(current_alignment, 2);


    current_alignment += 4 + eprosima::fastcdr::Cdr::alignment(current_alignment, 4);


    current_alignment += 8 + eprosima::fastcdr::Cdr::alignment(current_alignment, 8);


    current_alignment += 4 + eprosima::fastcdr::Cdr::alignment(current_alignment, 4);


    current_alignment += 8 + eprosima::fastcdr::Cdr::alignment(current_alignment, 8);


    current_alignment += 1 + eprosima::fastcdr::Cdr::alignment(current_alignment, 1);


    current_alignment += 4 + eprosima::fastcdr::Cdr::alignment(current_alignment, 4) + data.a_string().size() + 1;

    current_alignment += 4 + eprosima::fastcdr::Cdr::alignment(current_alignment, 4) + data.a_bound_string().size() + 1;

    current_alignment += 4 + eprosima::fastcdr::Cdr::alignment(current_alignment, 4) + (data.a_wstring().size()) * 4; // 32 bits

    current_alignment += 4 + eprosima::fastcdr::Cdr::alignment(current_alignment, 4) + (data.a_bound_wstring().size()) * 4; // 32 bits


    return current_alignment - initial_alignment;
}

void conversion_tests::msg::Ros2PrimitiveDatentypen::serialize(
        eprosima::fastcdr::Cdr& scdr) const
{

    scdr << m_a_bool;
    scdr << m_a_byte;
    scdr << m_a_uint8;
    scdr << m_a_uint16;
    scdr << m_a_uint32;
    scdr << m_a_uint64;
    scdr << m_a_int8;
    scdr << m_a_int16;
    scdr << m_a_int32;
    scdr << m_a_int64;
    scdr << m_a_float32;
    scdr << m_a_float64;
    scdr << m_a_char;
    scdr << m_a_string.c_str();
    scdr << m_a_bound_string.c_str();
    scdr << m_a_wstring;
    scdr << m_a_bound_wstring;

}

void conversion_tests::msg::Ros2PrimitiveDatentypen::deserialize(
        eprosima::fastcdr::Cdr& dcdr)
{

    dcdr >> m_a_bool;
    dcdr >> m_a_byte;
    dcdr >> m_a_uint8;
    dcdr >> m_a_uint16;
    dcdr >> m_a_uint32;
    dcdr >> m_a_uint64;
    dcdr >> m_a_int8;
    dcdr >> m_a_int16;
    dcdr >> m_a_int32;
    dcdr >> m_a_int64;
    dcdr >> m_a_float32;
    dcdr >> m_a_float64;
    dcdr >> m_a_char;
    dcdr >> m_a_string;
    {
        std::string aux;
        dcdr >> aux;
        m_a_bound_string = aux.c_str();
    }
    dcdr >> m_a_wstring;
    dcdr >> m_a_bound_wstring;
}

/*!
 * @brief This function sets a value in member a_bool
 * @param _a_bool New value for member a_bool
 */
void conversion_tests::msg::Ros2PrimitiveDatentypen::a_bool(
        bool _a_bool)
{
    m_a_bool = _a_bool;
}

/*!
 * @brief This function returns the value of member a_bool
 * @return Value of member a_bool
 */
bool conversion_tests::msg::Ros2PrimitiveDatentypen::a_bool() const
{
    return m_a_bool;
}

/*!
 * @brief This function returns a reference to member a_bool
 * @return Reference to member a_bool
 */
bool& conversion_tests::msg::Ros2PrimitiveDatentypen::a_bool()
{
    return m_a_bool;
}

/*!
 * @brief This function sets a value in member a_byte
 * @param _a_byte New value for member a_byte
 */
void conversion_tests::msg::Ros2PrimitiveDatentypen::a_byte(
        uint8_t _a_byte)
{
    m_a_byte = _a_byte;
}

/*!
 * @brief This function returns the value of member a_byte
 * @return Value of member a_byte
 */
uint8_t conversion_tests::msg::Ros2PrimitiveDatentypen::a_byte() const
{
    return m_a_byte;
}

/*!
 * @brief This function returns a reference to member a_byte
 * @return Reference to member a_byte
 */
uint8_t& conversion_tests::msg::Ros2PrimitiveDatentypen::a_byte()
{
    return m_a_byte;
}

/*!
 * @brief This function sets a value in member a_uint8
 * @param _a_uint8 New value for member a_uint8
 */
void conversion_tests::msg::Ros2PrimitiveDatentypen::a_uint8(
        uint8_t _a_uint8)
{
    m_a_uint8 = _a_uint8;
}

/*!
 * @brief This function returns the value of member a_uint8
 * @return Value of member a_uint8
 */
uint8_t conversion_tests::msg::Ros2PrimitiveDatentypen::a_uint8() const
{
    return m_a_uint8;
}

/*!
 * @brief This function returns a reference to member a_uint8
 * @return Reference to member a_uint8
 */
uint8_t& conversion_tests::msg::Ros2PrimitiveDatentypen::a_uint8()
{
    return m_a_uint8;
}

/*!
 * @brief This function sets a value in member a_uint16
 * @param _a_uint16 New value for member a_uint16
 */
void conversion_tests::msg::Ros2PrimitiveDatentypen::a_uint16(
        uint16_t _a_uint16)
{
    m_a_uint16 = _a_uint16;
}

/*!
 * @brief This function returns the value of member a_uint16
 * @return Value of member a_uint16
 */
uint16_t conversion_tests::msg::Ros2PrimitiveDatentypen::a_uint16() const
{
    return m_a_uint16;
}

/*!
 * @brief This function returns a reference to member a_uint16
 * @return Reference to member a_uint16
 */
uint16_t& conversion_tests::msg::Ros2PrimitiveDatentypen::a_uint16()
{
    return m_a_uint16;
}

/*!
 * @brief This function sets a value in member a_uint32
 * @param _a_uint32 New value for member a_uint32
 */
void conversion_tests::msg::Ros2PrimitiveDatentypen::a_uint32(
        uint32_t _a_uint32)
{
    m_a_uint32 = _a_uint32;
}

/*!
 * @brief This function returns the value of member a_uint32
 * @return Value of member a_uint32
 */
uint32_t conversion_tests::msg::Ros2PrimitiveDatentypen::a_uint32() const
{
    return m_a_uint32;
}

/*!
 * @brief This function returns a reference to member a_uint32
 * @return Reference to member a_uint32
 */
uint32_t& conversion_tests::msg::Ros2PrimitiveDatentypen::a_uint32()
{
    return m_a_uint32;
}

/*!
 * @brief This function sets a value in member a_uint64
 * @param _a_uint64 New value for member a_uint64
 */
void conversion_tests::msg::Ros2PrimitiveDatentypen::a_uint64(
        uint64_t _a_uint64)
{
    m_a_uint64 = _a_uint64;
}

/*!
 * @brief This function returns the value of member a_uint64
 * @return Value of member a_uint64
 */
uint64_t conversion_tests::msg::Ros2PrimitiveDatentypen::a_uint64() const
{
    return m_a_uint64;
}

/*!
 * @brief This function returns a reference to member a_uint64
 * @return Reference to member a_uint64
 */
uint64_t& conversion_tests::msg::Ros2PrimitiveDatentypen::a_uint64()
{
    return m_a_uint64;
}

/*!
 * @brief This function sets a value in member a_int8
 * @param _a_int8 New value for member a_int8
 */
void conversion_tests::msg::Ros2PrimitiveDatentypen::a_int8(
        int8_t _a_int8)
{
    m_a_int8 = _a_int8;
}

/*!
 * @brief This function returns the value of member a_int8
 * @return Value of member a_int8
 */
int8_t conversion_tests::msg::Ros2PrimitiveDatentypen::a_int8() const
{
    return m_a_int8;
}

/*!
 * @brief This function returns a reference to member a_int8
 * @return Reference to member a_int8
 */
int8_t& conversion_tests::msg::Ros2PrimitiveDatentypen::a_int8()
{
    return m_a_int8;
}

/*!
 * @brief This function sets a value in member a_int16
 * @param _a_int16 New value for member a_int16
 */
void conversion_tests::msg::Ros2PrimitiveDatentypen::a_int16(
        int16_t _a_int16)
{
    m_a_int16 = _a_int16;
}

/*!
 * @brief This function returns the value of member a_int16
 * @return Value of member a_int16
 */
int16_t conversion_tests::msg::Ros2PrimitiveDatentypen::a_int16() const
{
    return m_a_int16;
}

/*!
 * @brief This function returns a reference to member a_int16
 * @return Reference to member a_int16
 */
int16_t& conversion_tests::msg::Ros2PrimitiveDatentypen::a_int16()
{
    return m_a_int16;
}

/*!
 * @brief This function sets a value in member a_int32
 * @param _a_int32 New value for member a_int32
 */
void conversion_tests::msg::Ros2PrimitiveDatentypen::a_int32(
        int32_t _a_int32)
{
    m_a_int32 = _a_int32;
}

/*!
 * @brief This function returns the value of member a_int32
 * @return Value of member a_int32
 */
int32_t conversion_tests::msg::Ros2PrimitiveDatentypen::a_int32() const
{
    return m_a_int32;
}

/*!
 * @brief This function returns a reference to member a_int32
 * @return Reference to member a_int32
 */
int32_t& conversion_tests::msg::Ros2PrimitiveDatentypen::a_int32()
{
    return m_a_int32;
}

/*!
 * @brief This function sets a value in member a_int64
 * @param _a_int64 New value for member a_int64
 */
void conversion_tests::msg::Ros2PrimitiveDatentypen::a_int64(
        int64_t _a_int64)
{
    m_a_int64 = _a_int64;
}

/*!
 * @brief This function returns the value of member a_int64
 * @return Value of member a_int64
 */
int64_t conversion_tests::msg::Ros2PrimitiveDatentypen::a_int64() const
{
    return m_a_int64;
}

/*!
 * @brief This function returns a reference to member a_int64
 * @return Reference to member a_int64
 */
int64_t& conversion_tests::msg::Ros2PrimitiveDatentypen::a_int64()
{
    return m_a_int64;
}

/*!
 * @brief This function sets a value in member a_float32
 * @param _a_float32 New value for member a_float32
 */
void conversion_tests::msg::Ros2PrimitiveDatentypen::a_float32(
        float _a_float32)
{
    m_a_float32 = _a_float32;
}

/*!
 * @brief This function returns the value of member a_float32
 * @return Value of member a_float32
 */
float conversion_tests::msg::Ros2PrimitiveDatentypen::a_float32() const
{
    return m_a_float32;
}

/*!
 * @brief This function returns a reference to member a_float32
 * @return Reference to member a_float32
 */
float& conversion_tests::msg::Ros2PrimitiveDatentypen::a_float32()
{
    return m_a_float32;
}

/*!
 * @brief This function sets a value in member a_float64
 * @param _a_float64 New value for member a_float64
 */
void conversion_tests::msg::Ros2PrimitiveDatentypen::a_float64(
        double _a_float64)
{
    m_a_float64 = _a_float64;
}

/*!
 * @brief This function returns the value of member a_float64
 * @return Value of member a_float64
 */
double conversion_tests::msg::Ros2PrimitiveDatentypen::a_float64() const
{
    return m_a_float64;
}

/*!
 * @brief This function returns a reference to member a_float64
 * @return Reference to member a_float64
 */
double& conversion_tests::msg::Ros2PrimitiveDatentypen::a_float64()
{
    return m_a_float64;
}

/*!
 * @brief This function sets a value in member a_char
 * @param _a_char New value for member a_char
 */
void conversion_tests::msg::Ros2PrimitiveDatentypen::a_char(
        uint8_t _a_char)
{
    m_a_char = _a_char;
}

/*!
 * @brief This function returns the value of member a_char
 * @return Value of member a_char
 */
uint8_t conversion_tests::msg::Ros2PrimitiveDatentypen::a_char() const
{
    return m_a_char;
}

/*!
 * @brief This function returns a reference to member a_char
 * @return Reference to member a_char
 */
uint8_t& conversion_tests::msg::Ros2PrimitiveDatentypen::a_char()
{
    return m_a_char;
}

/*!
 * @brief This function copies the value in member a_string
 * @param _a_string New value to be copied in member a_string
 */
void conversion_tests::msg::Ros2PrimitiveDatentypen::a_string(
        const std::string& _a_string)
{
    m_a_string = _a_string;
}

/*!
 * @brief This function moves the value in member a_string
 * @param _a_string New value to be moved in member a_string
 */
void conversion_tests::msg::Ros2PrimitiveDatentypen::a_string(
        std::string&& _a_string)
{
    m_a_string = std::move(_a_string);
}

/*!
 * @brief This function returns a constant reference to member a_string
 * @return Constant reference to member a_string
 */
const std::string& conversion_tests::msg::Ros2PrimitiveDatentypen::a_string() const
{
    return m_a_string;
}

/*!
 * @brief This function returns a reference to member a_string
 * @return Reference to member a_string
 */
std::string& conversion_tests::msg::Ros2PrimitiveDatentypen::a_string()
{
    return m_a_string;
}
/*!
 * @brief This function copies the value in member a_bound_string
 * @param _a_bound_string New value to be copied in member a_bound_string
 */
void conversion_tests::msg::Ros2PrimitiveDatentypen::a_bound_string(
        const eprosima::fastrtps::fixed_string<2>& _a_bound_string)
{
    m_a_bound_string = _a_bound_string;
}

/*!
 * @brief This function moves the value in member a_bound_string
 * @param _a_bound_string New value to be moved in member a_bound_string
 */
void conversion_tests::msg::Ros2PrimitiveDatentypen::a_bound_string(
        eprosima::fastrtps::fixed_string<2>&& _a_bound_string)
{
    m_a_bound_string = std::move(_a_bound_string);
}

/*!
 * @brief This function returns a constant reference to member a_bound_string
 * @return Constant reference to member a_bound_string
 */
const eprosima::fastrtps::fixed_string<2>& conversion_tests::msg::Ros2PrimitiveDatentypen::a_bound_string() const
{
    return m_a_bound_string;
}

/*!
 * @brief This function returns a reference to member a_bound_string
 * @return Reference to member a_bound_string
 */
eprosima::fastrtps::fixed_string<2>& conversion_tests::msg::Ros2PrimitiveDatentypen::a_bound_string()
{
    return m_a_bound_string;
}
/*!
 * @brief This function copies the value in member a_wstring
 * @param _a_wstring New value to be copied in member a_wstring
 */
void conversion_tests::msg::Ros2PrimitiveDatentypen::a_wstring(
        const std::wstring& _a_wstring)
{
    m_a_wstring = _a_wstring;
}

/*!
 * @brief This function moves the value in member a_wstring
 * @param _a_wstring New value to be moved in member a_wstring
 */
void conversion_tests::msg::Ros2PrimitiveDatentypen::a_wstring(
        std::wstring&& _a_wstring)
{
    m_a_wstring = std::move(_a_wstring);
}

/*!
 * @brief This function returns a constant reference to member a_wstring
 * @return Constant reference to member a_wstring
 */
const std::wstring& conversion_tests::msg::Ros2PrimitiveDatentypen::a_wstring() const
{
    return m_a_wstring;
}

/*!
 * @brief This function returns a reference to member a_wstring
 * @return Reference to member a_wstring
 */
std::wstring& conversion_tests::msg::Ros2PrimitiveDatentypen::a_wstring()
{
    return m_a_wstring;
}
/*!
 * @brief This function copies the value in member a_bound_wstring
 * @param _a_bound_wstring New value to be copied in member a_bound_wstring
 */
void conversion_tests::msg::Ros2PrimitiveDatentypen::a_bound_wstring(
        const std::wstring& _a_bound_wstring)
{
    m_a_bound_wstring = _a_bound_wstring;
}

/*!
 * @brief This function moves the value in member a_bound_wstring
 * @param _a_bound_wstring New value to be moved in member a_bound_wstring
 */
void conversion_tests::msg::Ros2PrimitiveDatentypen::a_bound_wstring(
        std::wstring&& _a_bound_wstring)
{
    m_a_bound_wstring = std::move(_a_bound_wstring);
}

/*!
 * @brief This function returns a constant reference to member a_bound_wstring
 * @return Constant reference to member a_bound_wstring
 */
const std::wstring& conversion_tests::msg::Ros2PrimitiveDatentypen::a_bound_wstring() const
{
    return m_a_bound_wstring;
}

/*!
 * @brief This function returns a reference to member a_bound_wstring
 * @return Reference to member a_bound_wstring
 */
std::wstring& conversion_tests::msg::Ros2PrimitiveDatentypen::a_bound_wstring()
{
    return m_a_bound_wstring;
}


size_t conversion_tests::msg::Ros2PrimitiveDatentypen::getKeyMaxCdrSerializedSize(
        size_t current_alignment)
{
    static_cast<void>(current_alignment);
    return conversion_tests_msg_Ros2PrimitiveDatentypen_max_key_cdr_typesize;
}

bool conversion_tests::msg::Ros2PrimitiveDatentypen::isKeyDefined()
{
    return false;
}

void conversion_tests::msg::Ros2PrimitiveDatentypen::serializeKey(
        eprosima::fastcdr::Cdr& scdr) const
{
    (void) scdr;
}



