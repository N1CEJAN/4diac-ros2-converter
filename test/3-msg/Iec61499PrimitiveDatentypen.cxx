// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file Iec61499PrimitiveDatentypen.cpp
 * This source file contains the definition of the described types in the IDL file.
 *
 * This file was generated by the tool gen.
 */

#ifdef _WIN32
// Remove linker warning LNK4221 on Visual Studio
namespace {
char dummy;
}  // namespace
#endif  // _WIN32

#include "Iec61499PrimitiveDatentypen.h"
#include <fastcdr/Cdr.h>

#include <fastcdr/exceptions/BadParamException.h>
using namespace eprosima::fastcdr::exception;

#include <utility>

#define conversion_tests_msg_Iec61499PrimitiveDatentypen_max_cdr_typesize 1372ULL;
#define conversion_tests_msg_Iec61499PrimitiveDatentypen_max_key_cdr_typesize 0ULL;

conversion_tests::msg::Iec61499PrimitiveDatentypen::Iec61499PrimitiveDatentypen()
{
    // boolean m_a_bool
    m_a_bool = false;
    // octet m_a_byte
    m_a_byte = 0;
    // unsigned short m_a_word
    m_a_word = 0;
    // unsigned long m_a_dword
    m_a_dword = 0;
    // unsigned long long m_a_lword
    m_a_lword = 0;
    // int8 m_a_sint
    m_a_sint = 0;
    // short m_a_int
    m_a_int = 0;
    // long m_a_dint
    m_a_dint = 0;
    // long long m_a_lint
    m_a_lint = 0;
    // uint8 m_a_usint
    m_a_usint = 0;
    // unsigned short m_a_uint
    m_a_uint = 0;
    // unsigned long m_a_udint
    m_a_udint = 0;
    // unsigned long long m_a_ulint
    m_a_ulint = 0;
    // float m_a_real
    m_a_real = 0.0;
    // double m_a_lreal
    m_a_lreal = 0.0;
    // uint8 m_a_char
    m_a_char = 0;
    // string m_a_string
    m_a_string ="";
    // string m_a_bound_string
    m_a_bound_string ="";
    // wstring m_a_wstring

    // wstring m_a_bound_wstring


}

conversion_tests::msg::Iec61499PrimitiveDatentypen::~Iec61499PrimitiveDatentypen()
{




















}

conversion_tests::msg::Iec61499PrimitiveDatentypen::Iec61499PrimitiveDatentypen(
        const Iec61499PrimitiveDatentypen& x)
{
    m_a_bool = x.m_a_bool;
    m_a_byte = x.m_a_byte;
    m_a_word = x.m_a_word;
    m_a_dword = x.m_a_dword;
    m_a_lword = x.m_a_lword;
    m_a_sint = x.m_a_sint;
    m_a_int = x.m_a_int;
    m_a_dint = x.m_a_dint;
    m_a_lint = x.m_a_lint;
    m_a_usint = x.m_a_usint;
    m_a_uint = x.m_a_uint;
    m_a_udint = x.m_a_udint;
    m_a_ulint = x.m_a_ulint;
    m_a_real = x.m_a_real;
    m_a_lreal = x.m_a_lreal;
    m_a_char = x.m_a_char;
    m_a_string = x.m_a_string;
    m_a_bound_string = x.m_a_bound_string;
    m_a_wstring = x.m_a_wstring;
    m_a_bound_wstring = x.m_a_bound_wstring;
}

conversion_tests::msg::Iec61499PrimitiveDatentypen::Iec61499PrimitiveDatentypen(
        Iec61499PrimitiveDatentypen&& x) noexcept 
{
    m_a_bool = x.m_a_bool;
    m_a_byte = x.m_a_byte;
    m_a_word = x.m_a_word;
    m_a_dword = x.m_a_dword;
    m_a_lword = x.m_a_lword;
    m_a_sint = x.m_a_sint;
    m_a_int = x.m_a_int;
    m_a_dint = x.m_a_dint;
    m_a_lint = x.m_a_lint;
    m_a_usint = x.m_a_usint;
    m_a_uint = x.m_a_uint;
    m_a_udint = x.m_a_udint;
    m_a_ulint = x.m_a_ulint;
    m_a_real = x.m_a_real;
    m_a_lreal = x.m_a_lreal;
    m_a_char = x.m_a_char;
    m_a_string = std::move(x.m_a_string);
    m_a_bound_string = std::move(x.m_a_bound_string);
    m_a_wstring = std::move(x.m_a_wstring);
    m_a_bound_wstring = std::move(x.m_a_bound_wstring);
}

conversion_tests::msg::Iec61499PrimitiveDatentypen& conversion_tests::msg::Iec61499PrimitiveDatentypen::operator =(
        const Iec61499PrimitiveDatentypen& x)
{

    m_a_bool = x.m_a_bool;
    m_a_byte = x.m_a_byte;
    m_a_word = x.m_a_word;
    m_a_dword = x.m_a_dword;
    m_a_lword = x.m_a_lword;
    m_a_sint = x.m_a_sint;
    m_a_int = x.m_a_int;
    m_a_dint = x.m_a_dint;
    m_a_lint = x.m_a_lint;
    m_a_usint = x.m_a_usint;
    m_a_uint = x.m_a_uint;
    m_a_udint = x.m_a_udint;
    m_a_ulint = x.m_a_ulint;
    m_a_real = x.m_a_real;
    m_a_lreal = x.m_a_lreal;
    m_a_char = x.m_a_char;
    m_a_string = x.m_a_string;
    m_a_bound_string = x.m_a_bound_string;
    m_a_wstring = x.m_a_wstring;
    m_a_bound_wstring = x.m_a_bound_wstring;

    return *this;
}

conversion_tests::msg::Iec61499PrimitiveDatentypen& conversion_tests::msg::Iec61499PrimitiveDatentypen::operator =(
        Iec61499PrimitiveDatentypen&& x) noexcept
{

    m_a_bool = x.m_a_bool;
    m_a_byte = x.m_a_byte;
    m_a_word = x.m_a_word;
    m_a_dword = x.m_a_dword;
    m_a_lword = x.m_a_lword;
    m_a_sint = x.m_a_sint;
    m_a_int = x.m_a_int;
    m_a_dint = x.m_a_dint;
    m_a_lint = x.m_a_lint;
    m_a_usint = x.m_a_usint;
    m_a_uint = x.m_a_uint;
    m_a_udint = x.m_a_udint;
    m_a_ulint = x.m_a_ulint;
    m_a_real = x.m_a_real;
    m_a_lreal = x.m_a_lreal;
    m_a_char = x.m_a_char;
    m_a_string = std::move(x.m_a_string);
    m_a_bound_string = std::move(x.m_a_bound_string);
    m_a_wstring = std::move(x.m_a_wstring);
    m_a_bound_wstring = std::move(x.m_a_bound_wstring);

    return *this;
}

bool conversion_tests::msg::Iec61499PrimitiveDatentypen::operator ==(
        const Iec61499PrimitiveDatentypen& x) const
{

    return (m_a_bool == x.m_a_bool && m_a_byte == x.m_a_byte && m_a_word == x.m_a_word && m_a_dword == x.m_a_dword && m_a_lword == x.m_a_lword && m_a_sint == x.m_a_sint && m_a_int == x.m_a_int && m_a_dint == x.m_a_dint && m_a_lint == x.m_a_lint && m_a_usint == x.m_a_usint && m_a_uint == x.m_a_uint && m_a_udint == x.m_a_udint && m_a_ulint == x.m_a_ulint && m_a_real == x.m_a_real && m_a_lreal == x.m_a_lreal && m_a_char == x.m_a_char && m_a_string == x.m_a_string && m_a_bound_string == x.m_a_bound_string && m_a_wstring == x.m_a_wstring && m_a_bound_wstring == x.m_a_bound_wstring);
}

bool conversion_tests::msg::Iec61499PrimitiveDatentypen::operator !=(
        const Iec61499PrimitiveDatentypen& x) const
{
    return !(*this == x);
}

size_t conversion_tests::msg::Iec61499PrimitiveDatentypen::getMaxCdrSerializedSize(
        size_t current_alignment)
{
    static_cast<void>(current_alignment);
    return conversion_tests_msg_Iec61499PrimitiveDatentypen_max_cdr_typesize;
}

size_t conversion_tests::msg::Iec61499PrimitiveDatentypen::getCdrSerializedSize(
        const conversion_tests::msg::Iec61499PrimitiveDatentypen& data,
        size_t current_alignment)
{
    (void)data;
    size_t initial_alignment = current_alignment;


    current_alignment += 1 + eprosima::fastcdr::Cdr::alignment(current_alignment, 1);


    current_alignment += 1 + eprosima::fastcdr::Cdr::alignment(current_alignment, 1);


    current_alignment += 2 + eprosima::fastcdr::Cdr::alignment(current_alignment, 2);


    current_alignment += 4 + eprosima::fastcdr::Cdr::alignment(current_alignment, 4);


    current_alignment += 8 + eprosima::fastcdr::Cdr::alignment(current_alignment, 8);


    current_alignment += 1 + eprosima::fastcdr::Cdr::alignment(current_alignment, 1);


    current_alignment += 2 + eprosima::fastcdr::Cdr::alignment(current_alignment, 2);


    current_alignment += 4 + eprosima::fastcdr::Cdr::alignment(current_alignment, 4);


    current_alignment += 8 + eprosima::fastcdr::Cdr::alignment(current_alignment, 8);


    current_alignment += 1 + eprosima::fastcdr::Cdr::alignment(current_alignment, 1);


    current_alignment += 2 + eprosima::fastcdr::Cdr::alignment(current_alignment, 2);


    current_alignment += 4 + eprosima::fastcdr::Cdr::alignment(current_alignment, 4);


    current_alignment += 8 + eprosima::fastcdr::Cdr::alignment(current_alignment, 8);


    current_alignment += 4 + eprosima::fastcdr::Cdr::alignment(current_alignment, 4);


    current_alignment += 8 + eprosima::fastcdr::Cdr::alignment(current_alignment, 8);


    current_alignment += 1 + eprosima::fastcdr::Cdr::alignment(current_alignment, 1);


    current_alignment += 4 + eprosima::fastcdr::Cdr::alignment(current_alignment, 4) + data.a_string().size() + 1;

    current_alignment += 4 + eprosima::fastcdr::Cdr::alignment(current_alignment, 4) + data.a_bound_string().size() + 1;

    current_alignment += 4 + eprosima::fastcdr::Cdr::alignment(current_alignment, 4) + (data.a_wstring().size()) * 4; // 32 bits

    current_alignment += 4 + eprosima::fastcdr::Cdr::alignment(current_alignment, 4) + (data.a_bound_wstring().size()) * 4; // 32 bits


    return current_alignment - initial_alignment;
}

void conversion_tests::msg::Iec61499PrimitiveDatentypen::serialize(
        eprosima::fastcdr::Cdr& scdr) const
{

    scdr << m_a_bool;
    scdr << m_a_byte;
    scdr << m_a_word;
    scdr << m_a_dword;
    scdr << m_a_lword;
    scdr << m_a_sint;
    scdr << m_a_int;
    scdr << m_a_dint;
    scdr << m_a_lint;
    scdr << m_a_usint;
    scdr << m_a_uint;
    scdr << m_a_udint;
    scdr << m_a_ulint;
    scdr << m_a_real;
    scdr << m_a_lreal;
    scdr << m_a_char;
    scdr << m_a_string.c_str();
    scdr << m_a_bound_string.c_str();
    scdr << m_a_wstring;
    scdr << m_a_bound_wstring;

}

void conversion_tests::msg::Iec61499PrimitiveDatentypen::deserialize(
        eprosima::fastcdr::Cdr& dcdr)
{

    dcdr >> m_a_bool;
    dcdr >> m_a_byte;
    dcdr >> m_a_word;
    dcdr >> m_a_dword;
    dcdr >> m_a_lword;
    dcdr >> m_a_sint;
    dcdr >> m_a_int;
    dcdr >> m_a_dint;
    dcdr >> m_a_lint;
    dcdr >> m_a_usint;
    dcdr >> m_a_uint;
    dcdr >> m_a_udint;
    dcdr >> m_a_ulint;
    dcdr >> m_a_real;
    dcdr >> m_a_lreal;
    dcdr >> m_a_char;
    dcdr >> m_a_string;
    {
        std::string aux;
        dcdr >> aux;
        m_a_bound_string = aux.c_str();
    }
    dcdr >> m_a_wstring;
    dcdr >> m_a_bound_wstring;
}

/*!
 * @brief This function sets a value in member a_bool
 * @param _a_bool New value for member a_bool
 */
void conversion_tests::msg::Iec61499PrimitiveDatentypen::a_bool(
        bool _a_bool)
{
    m_a_bool = _a_bool;
}

/*!
 * @brief This function returns the value of member a_bool
 * @return Value of member a_bool
 */
bool conversion_tests::msg::Iec61499PrimitiveDatentypen::a_bool() const
{
    return m_a_bool;
}

/*!
 * @brief This function returns a reference to member a_bool
 * @return Reference to member a_bool
 */
bool& conversion_tests::msg::Iec61499PrimitiveDatentypen::a_bool()
{
    return m_a_bool;
}

/*!
 * @brief This function sets a value in member a_byte
 * @param _a_byte New value for member a_byte
 */
void conversion_tests::msg::Iec61499PrimitiveDatentypen::a_byte(
        uint8_t _a_byte)
{
    m_a_byte = _a_byte;
}

/*!
 * @brief This function returns the value of member a_byte
 * @return Value of member a_byte
 */
uint8_t conversion_tests::msg::Iec61499PrimitiveDatentypen::a_byte() const
{
    return m_a_byte;
}

/*!
 * @brief This function returns a reference to member a_byte
 * @return Reference to member a_byte
 */
uint8_t& conversion_tests::msg::Iec61499PrimitiveDatentypen::a_byte()
{
    return m_a_byte;
}

/*!
 * @brief This function sets a value in member a_word
 * @param _a_word New value for member a_word
 */
void conversion_tests::msg::Iec61499PrimitiveDatentypen::a_word(
        uint16_t _a_word)
{
    m_a_word = _a_word;
}

/*!
 * @brief This function returns the value of member a_word
 * @return Value of member a_word
 */
uint16_t conversion_tests::msg::Iec61499PrimitiveDatentypen::a_word() const
{
    return m_a_word;
}

/*!
 * @brief This function returns a reference to member a_word
 * @return Reference to member a_word
 */
uint16_t& conversion_tests::msg::Iec61499PrimitiveDatentypen::a_word()
{
    return m_a_word;
}

/*!
 * @brief This function sets a value in member a_dword
 * @param _a_dword New value for member a_dword
 */
void conversion_tests::msg::Iec61499PrimitiveDatentypen::a_dword(
        uint32_t _a_dword)
{
    m_a_dword = _a_dword;
}

/*!
 * @brief This function returns the value of member a_dword
 * @return Value of member a_dword
 */
uint32_t conversion_tests::msg::Iec61499PrimitiveDatentypen::a_dword() const
{
    return m_a_dword;
}

/*!
 * @brief This function returns a reference to member a_dword
 * @return Reference to member a_dword
 */
uint32_t& conversion_tests::msg::Iec61499PrimitiveDatentypen::a_dword()
{
    return m_a_dword;
}

/*!
 * @brief This function sets a value in member a_lword
 * @param _a_lword New value for member a_lword
 */
void conversion_tests::msg::Iec61499PrimitiveDatentypen::a_lword(
        uint64_t _a_lword)
{
    m_a_lword = _a_lword;
}

/*!
 * @brief This function returns the value of member a_lword
 * @return Value of member a_lword
 */
uint64_t conversion_tests::msg::Iec61499PrimitiveDatentypen::a_lword() const
{
    return m_a_lword;
}

/*!
 * @brief This function returns a reference to member a_lword
 * @return Reference to member a_lword
 */
uint64_t& conversion_tests::msg::Iec61499PrimitiveDatentypen::a_lword()
{
    return m_a_lword;
}

/*!
 * @brief This function sets a value in member a_sint
 * @param _a_sint New value for member a_sint
 */
void conversion_tests::msg::Iec61499PrimitiveDatentypen::a_sint(
        int8_t _a_sint)
{
    m_a_sint = _a_sint;
}

/*!
 * @brief This function returns the value of member a_sint
 * @return Value of member a_sint
 */
int8_t conversion_tests::msg::Iec61499PrimitiveDatentypen::a_sint() const
{
    return m_a_sint;
}

/*!
 * @brief This function returns a reference to member a_sint
 * @return Reference to member a_sint
 */
int8_t& conversion_tests::msg::Iec61499PrimitiveDatentypen::a_sint()
{
    return m_a_sint;
}

/*!
 * @brief This function sets a value in member a_int
 * @param _a_int New value for member a_int
 */
void conversion_tests::msg::Iec61499PrimitiveDatentypen::a_int(
        int16_t _a_int)
{
    m_a_int = _a_int;
}

/*!
 * @brief This function returns the value of member a_int
 * @return Value of member a_int
 */
int16_t conversion_tests::msg::Iec61499PrimitiveDatentypen::a_int() const
{
    return m_a_int;
}

/*!
 * @brief This function returns a reference to member a_int
 * @return Reference to member a_int
 */
int16_t& conversion_tests::msg::Iec61499PrimitiveDatentypen::a_int()
{
    return m_a_int;
}

/*!
 * @brief This function sets a value in member a_dint
 * @param _a_dint New value for member a_dint
 */
void conversion_tests::msg::Iec61499PrimitiveDatentypen::a_dint(
        int32_t _a_dint)
{
    m_a_dint = _a_dint;
}

/*!
 * @brief This function returns the value of member a_dint
 * @return Value of member a_dint
 */
int32_t conversion_tests::msg::Iec61499PrimitiveDatentypen::a_dint() const
{
    return m_a_dint;
}

/*!
 * @brief This function returns a reference to member a_dint
 * @return Reference to member a_dint
 */
int32_t& conversion_tests::msg::Iec61499PrimitiveDatentypen::a_dint()
{
    return m_a_dint;
}

/*!
 * @brief This function sets a value in member a_lint
 * @param _a_lint New value for member a_lint
 */
void conversion_tests::msg::Iec61499PrimitiveDatentypen::a_lint(
        int64_t _a_lint)
{
    m_a_lint = _a_lint;
}

/*!
 * @brief This function returns the value of member a_lint
 * @return Value of member a_lint
 */
int64_t conversion_tests::msg::Iec61499PrimitiveDatentypen::a_lint() const
{
    return m_a_lint;
}

/*!
 * @brief This function returns a reference to member a_lint
 * @return Reference to member a_lint
 */
int64_t& conversion_tests::msg::Iec61499PrimitiveDatentypen::a_lint()
{
    return m_a_lint;
}

/*!
 * @brief This function sets a value in member a_usint
 * @param _a_usint New value for member a_usint
 */
void conversion_tests::msg::Iec61499PrimitiveDatentypen::a_usint(
        uint8_t _a_usint)
{
    m_a_usint = _a_usint;
}

/*!
 * @brief This function returns the value of member a_usint
 * @return Value of member a_usint
 */
uint8_t conversion_tests::msg::Iec61499PrimitiveDatentypen::a_usint() const
{
    return m_a_usint;
}

/*!
 * @brief This function returns a reference to member a_usint
 * @return Reference to member a_usint
 */
uint8_t& conversion_tests::msg::Iec61499PrimitiveDatentypen::a_usint()
{
    return m_a_usint;
}

/*!
 * @brief This function sets a value in member a_uint
 * @param _a_uint New value for member a_uint
 */
void conversion_tests::msg::Iec61499PrimitiveDatentypen::a_uint(
        uint16_t _a_uint)
{
    m_a_uint = _a_uint;
}

/*!
 * @brief This function returns the value of member a_uint
 * @return Value of member a_uint
 */
uint16_t conversion_tests::msg::Iec61499PrimitiveDatentypen::a_uint() const
{
    return m_a_uint;
}

/*!
 * @brief This function returns a reference to member a_uint
 * @return Reference to member a_uint
 */
uint16_t& conversion_tests::msg::Iec61499PrimitiveDatentypen::a_uint()
{
    return m_a_uint;
}

/*!
 * @brief This function sets a value in member a_udint
 * @param _a_udint New value for member a_udint
 */
void conversion_tests::msg::Iec61499PrimitiveDatentypen::a_udint(
        uint32_t _a_udint)
{
    m_a_udint = _a_udint;
}

/*!
 * @brief This function returns the value of member a_udint
 * @return Value of member a_udint
 */
uint32_t conversion_tests::msg::Iec61499PrimitiveDatentypen::a_udint() const
{
    return m_a_udint;
}

/*!
 * @brief This function returns a reference to member a_udint
 * @return Reference to member a_udint
 */
uint32_t& conversion_tests::msg::Iec61499PrimitiveDatentypen::a_udint()
{
    return m_a_udint;
}

/*!
 * @brief This function sets a value in member a_ulint
 * @param _a_ulint New value for member a_ulint
 */
void conversion_tests::msg::Iec61499PrimitiveDatentypen::a_ulint(
        uint64_t _a_ulint)
{
    m_a_ulint = _a_ulint;
}

/*!
 * @brief This function returns the value of member a_ulint
 * @return Value of member a_ulint
 */
uint64_t conversion_tests::msg::Iec61499PrimitiveDatentypen::a_ulint() const
{
    return m_a_ulint;
}

/*!
 * @brief This function returns a reference to member a_ulint
 * @return Reference to member a_ulint
 */
uint64_t& conversion_tests::msg::Iec61499PrimitiveDatentypen::a_ulint()
{
    return m_a_ulint;
}

/*!
 * @brief This function sets a value in member a_real
 * @param _a_real New value for member a_real
 */
void conversion_tests::msg::Iec61499PrimitiveDatentypen::a_real(
        float _a_real)
{
    m_a_real = _a_real;
}

/*!
 * @brief This function returns the value of member a_real
 * @return Value of member a_real
 */
float conversion_tests::msg::Iec61499PrimitiveDatentypen::a_real() const
{
    return m_a_real;
}

/*!
 * @brief This function returns a reference to member a_real
 * @return Reference to member a_real
 */
float& conversion_tests::msg::Iec61499PrimitiveDatentypen::a_real()
{
    return m_a_real;
}

/*!
 * @brief This function sets a value in member a_lreal
 * @param _a_lreal New value for member a_lreal
 */
void conversion_tests::msg::Iec61499PrimitiveDatentypen::a_lreal(
        double _a_lreal)
{
    m_a_lreal = _a_lreal;
}

/*!
 * @brief This function returns the value of member a_lreal
 * @return Value of member a_lreal
 */
double conversion_tests::msg::Iec61499PrimitiveDatentypen::a_lreal() const
{
    return m_a_lreal;
}

/*!
 * @brief This function returns a reference to member a_lreal
 * @return Reference to member a_lreal
 */
double& conversion_tests::msg::Iec61499PrimitiveDatentypen::a_lreal()
{
    return m_a_lreal;
}

/*!
 * @brief This function sets a value in member a_char
 * @param _a_char New value for member a_char
 */
void conversion_tests::msg::Iec61499PrimitiveDatentypen::a_char(
        uint8_t _a_char)
{
    m_a_char = _a_char;
}

/*!
 * @brief This function returns the value of member a_char
 * @return Value of member a_char
 */
uint8_t conversion_tests::msg::Iec61499PrimitiveDatentypen::a_char() const
{
    return m_a_char;
}

/*!
 * @brief This function returns a reference to member a_char
 * @return Reference to member a_char
 */
uint8_t& conversion_tests::msg::Iec61499PrimitiveDatentypen::a_char()
{
    return m_a_char;
}

/*!
 * @brief This function copies the value in member a_string
 * @param _a_string New value to be copied in member a_string
 */
void conversion_tests::msg::Iec61499PrimitiveDatentypen::a_string(
        const std::string& _a_string)
{
    m_a_string = _a_string;
}

/*!
 * @brief This function moves the value in member a_string
 * @param _a_string New value to be moved in member a_string
 */
void conversion_tests::msg::Iec61499PrimitiveDatentypen::a_string(
        std::string&& _a_string)
{
    m_a_string = std::move(_a_string);
}

/*!
 * @brief This function returns a constant reference to member a_string
 * @return Constant reference to member a_string
 */
const std::string& conversion_tests::msg::Iec61499PrimitiveDatentypen::a_string() const
{
    return m_a_string;
}

/*!
 * @brief This function returns a reference to member a_string
 * @return Reference to member a_string
 */
std::string& conversion_tests::msg::Iec61499PrimitiveDatentypen::a_string()
{
    return m_a_string;
}
/*!
 * @brief This function copies the value in member a_bound_string
 * @param _a_bound_string New value to be copied in member a_bound_string
 */
void conversion_tests::msg::Iec61499PrimitiveDatentypen::a_bound_string(
        const eprosima::fastrtps::fixed_string<2>& _a_bound_string)
{
    m_a_bound_string = _a_bound_string;
}

/*!
 * @brief This function moves the value in member a_bound_string
 * @param _a_bound_string New value to be moved in member a_bound_string
 */
void conversion_tests::msg::Iec61499PrimitiveDatentypen::a_bound_string(
        eprosima::fastrtps::fixed_string<2>&& _a_bound_string)
{
    m_a_bound_string = std::move(_a_bound_string);
}

/*!
 * @brief This function returns a constant reference to member a_bound_string
 * @return Constant reference to member a_bound_string
 */
const eprosima::fastrtps::fixed_string<2>& conversion_tests::msg::Iec61499PrimitiveDatentypen::a_bound_string() const
{
    return m_a_bound_string;
}

/*!
 * @brief This function returns a reference to member a_bound_string
 * @return Reference to member a_bound_string
 */
eprosima::fastrtps::fixed_string<2>& conversion_tests::msg::Iec61499PrimitiveDatentypen::a_bound_string()
{
    return m_a_bound_string;
}
/*!
 * @brief This function copies the value in member a_wstring
 * @param _a_wstring New value to be copied in member a_wstring
 */
void conversion_tests::msg::Iec61499PrimitiveDatentypen::a_wstring(
        const std::wstring& _a_wstring)
{
    m_a_wstring = _a_wstring;
}

/*!
 * @brief This function moves the value in member a_wstring
 * @param _a_wstring New value to be moved in member a_wstring
 */
void conversion_tests::msg::Iec61499PrimitiveDatentypen::a_wstring(
        std::wstring&& _a_wstring)
{
    m_a_wstring = std::move(_a_wstring);
}

/*!
 * @brief This function returns a constant reference to member a_wstring
 * @return Constant reference to member a_wstring
 */
const std::wstring& conversion_tests::msg::Iec61499PrimitiveDatentypen::a_wstring() const
{
    return m_a_wstring;
}

/*!
 * @brief This function returns a reference to member a_wstring
 * @return Reference to member a_wstring
 */
std::wstring& conversion_tests::msg::Iec61499PrimitiveDatentypen::a_wstring()
{
    return m_a_wstring;
}
/*!
 * @brief This function copies the value in member a_bound_wstring
 * @param _a_bound_wstring New value to be copied in member a_bound_wstring
 */
void conversion_tests::msg::Iec61499PrimitiveDatentypen::a_bound_wstring(
        const std::wstring& _a_bound_wstring)
{
    m_a_bound_wstring = _a_bound_wstring;
}

/*!
 * @brief This function moves the value in member a_bound_wstring
 * @param _a_bound_wstring New value to be moved in member a_bound_wstring
 */
void conversion_tests::msg::Iec61499PrimitiveDatentypen::a_bound_wstring(
        std::wstring&& _a_bound_wstring)
{
    m_a_bound_wstring = std::move(_a_bound_wstring);
}

/*!
 * @brief This function returns a constant reference to member a_bound_wstring
 * @return Constant reference to member a_bound_wstring
 */
const std::wstring& conversion_tests::msg::Iec61499PrimitiveDatentypen::a_bound_wstring() const
{
    return m_a_bound_wstring;
}

/*!
 * @brief This function returns a reference to member a_bound_wstring
 * @return Reference to member a_bound_wstring
 */
std::wstring& conversion_tests::msg::Iec61499PrimitiveDatentypen::a_bound_wstring()
{
    return m_a_bound_wstring;
}


size_t conversion_tests::msg::Iec61499PrimitiveDatentypen::getKeyMaxCdrSerializedSize(
        size_t current_alignment)
{
    static_cast<void>(current_alignment);
    return conversion_tests_msg_Iec61499PrimitiveDatentypen_max_key_cdr_typesize;
}

bool conversion_tests::msg::Iec61499PrimitiveDatentypen::isKeyDefined()
{
    return false;
}

void conversion_tests::msg::Iec61499PrimitiveDatentypen::serializeKey(
        eprosima::fastcdr::Cdr& scdr) const
{
    (void) scdr;
}



